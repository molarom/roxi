image: golang:1.23

stages:
  - lint
  - test
  - prepare
  - release

before_script:
  - go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.64.5

lint:
  stage: lint
  script:
    - golangci-lint run

test:
  stage: test
  script:
    - CGO_ENABLED=0 go test .

test-race:
  stage: test
  script:
    - CGO_ENABLED=1 go test -race .

coverage:
  stage: test
  script:
    - CGO_ENABLED=0 go test -cover
  coverage: '/coverage: \d+.\d+% of statements/'

prepare_job:
  stage: prepare
  before_script: []
  image: alpine:latest
  rules:
  - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  script:
    - apk add curl jq
    - 'curl -H "PRIVATE-TOKEN: $CI_API_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG" | jq -r .notes > release_notes.md'
  artifacts:
    paths:
    - release_notes.md

release_job:
  stage: release
  before_script: []
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: prepare_job
      artifacts: true
  rules:
  - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+$/'
  script:
    - echo "Creating release"
  release:
    name: 'Release $CI_COMMIT_TAG'
    description: release_notes.md
    tag_name: '$CI_COMMIT_TAG'
    ref: '$CI_COMMIT_SHA'
